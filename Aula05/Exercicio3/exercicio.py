# -*- coding: utf-8 -*-
"""Exercicio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oveboG5ZtjSBR_kFZUNIDt8UqsL3UkQE
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris

dataset = load_iris()

X = dataset.data
Y = dataset.target

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, stratify=Y, random_state=42)

"""## SKLearn"""

from sklearn.neural_network import MLPClassifier

clf1 = MLPClassifier(hidden_layer_sizes=(2), random_state=42, alpha=0, beta_1=0, beta_2=0, momentum=0, power_t=0, nesterovs_momentum=False)
clf1.fit(X_train, Y_train)

print('Train accuracy: ', clf1.score(X_train, Y_train), ' / Test accuracy', clf1.score(X_test, Y_test))
print('Remp: ', (1 - clf1.score(X_train, Y_train)), ' / Rest: ', (1 - clf1.score(X_test, Y_test)))
print('Remp - Rest: ', (1 - clf1.score(X_train, Y_train)) - (1 - clf1.score(X_test, Y_test)))

clf2 = MLPClassifier(hidden_layer_sizes=(3), learning_rate_init=0.1, random_state=42)
clf2.fit(X_train, Y_train)

print('Train accuracy: ', clf2.score(X_train, Y_train), ' / Test accuracy', clf2.score(X_test, Y_test))
print('Remp: ', (1 - clf2.score(X_train, Y_train)), ' / Rest: ', (1 - clf2.score(X_test, Y_test)))
print('Remp - Rest: ', (1 - clf2.score(X_train, Y_train)) - (1 - clf2.score(X_test, Y_test)))